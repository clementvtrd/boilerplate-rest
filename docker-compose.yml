name: ${APP_NAME:-app}

services:
  traefik:
    build: ./services/traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./certs:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
      target: base
    env_file:
      - ./apps/web/.env
    restart: unless-stopped
    command: yarn dev
    volumes:
      - ./apps/web:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node.tls=true"
      - "traefik.http.routers.node.rule=Host(`app.localhost`)"
      - "traefik.http.services.node.loadbalancer.server.port=3000"

  api:
    build: ./services/nginx
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.rule=Host(`api.app.localhost`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    volumes:
      - ./apps/api:/app:ro

  php:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./apps/api/.env
    volumes:
      - ./apps/api:/app
    depends_on:
      database:
        condition: service_healthy
        restart: true

  database:
    build: ./services/postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=app
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "app", "-U", "user", "-t", "30"]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 30s

  rabbitmq:
    build: ./services/rabbitmq
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.tls=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.app.localhost`)"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

volumes:
  postgres:
